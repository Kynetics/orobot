//
// Copyright 2015 Kynetics SRL
//
// This file is part of orobot.
//
// orobot is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// orobot is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with orobot.  If not, see <http://www.gnu.org/licenses/>.
//
# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
#
# This must be changed for production, but we recommend not changing it in this file.
#
# See http://www.playframework.com/documentation/latest/ApplicationSecret for more details.
play.crypto.secret = "changeme"

# The application languages
# ~~~~~
play.i18n.langs = [ "en" ]

logback.configurationFile = "logback.xml"

# The application DI modules
# ~~~~~
play.modules.enabled += "modules.ORobotModule"

# YEOMAN configuration
# ~~~~~
yeoman.distDir="/ui/dist"
yeoman.devDirs=["ui/.tmp", "ui/app"]

# Registers the filters
# ~~~~~
play.http.filters = "utils.Filters"

# Security Filter Configuration - Content Security Policy
# ~~~~~
#play.filters.headers.contentSecurityPolicy
# default-src
# 'self'
# img-src
# 'self'
# fbcdn-profile-a.akamaihd.net (Facebook)
# *.twimg.com (Twitter)
# *.googleusercontent.com (Google)
# *.xingassets.com (Xing)
# vk.com (VK)
# *.yimg.com (Yahoo)
# secure.gravatar.com
# style-src
# 'self'
# 'unsafe-inline'
# maxcdn.bootstrapcdn.com
# cdn.jsdelivr.net
# fonts.googleapis.com
# 'unsafe-inline' (in-line css found in bootstrap.min.js)
# font-src
# 'self'
# fonts.gstatic.com
# fonts.googleapis.com
# maxcdn.bootstrapcdn.com
# connect-src
# 'self'
# twitter.com
# *.xing.com
play.filters.headers.contentSecurityPolicy="default-src 'self'; script-src 'self' 'unsafe-inline'; media-src 'self' blob:; img-src 'self' data: blob: fbcdn-profile-a.akamaihd.net *.twimg.com *.googleusercontent.com *.xingassets.com vk.com *.yimg.com secure.gravatar.com; style-src 'self' 'unsafe-inline' maxcdn.bootstrapcdn.com cdn.jsdelivr.net fonts.googleapis.com; font-src 'self' fonts.gstatic.com fonts.googleapis.com maxcdn.bootstrapcdn.com; connect-src 'self' ws://localhost:9000 http://192.168.197.85:8080 ws://192.168.197.85:8080 twitter.com *.xing.com"

# CSRF Token Filter Configuration
# ~~~~~
play.filters.csrf.cookie.name="PLAY_CSRF_TOKEN" // We store the CSRF token in a cookie instead of the session so that Angular can read it
play.filters.csrf.contentType.blackList=[ // We would also check AJAX requests from type application/json
  "application/x-www-form-urlencoded",
  "multipart/form-data",
  "text/plain",
  "application/json"
]

include "silhouette.conf"

# Users import on startup
# ~~~~~~~~~~~~~~~~~~~~~~~~
users.import.onstart = true
users.import.file.csv = "./users.csv"
users.import.file.rename = false

# Customers import on startup
# ~~~~~~~~~~~~~~~~~~~~~~~~
customers.import.onstart = ${?populateCustomers}
customers.import.file.csv = "customers.csv"

akka.actor.serialize-creators = off
akka.actor.serialize-messages = off

# EasyRTC socket url
easyrtc.socketUrl="//192.168.0.1:8080"
